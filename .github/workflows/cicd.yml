name: Deploy Static Site

on:
  push:
    paths:
      - '**.html'
      - 'css/**'
      - 'js/**'
      - 'images/**'
      - 'fonts/**'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  deploy-static:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup Terraform (for outputs only)
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Terraform Init (Backend Only)
      run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET_ID }}" -backend-config="key=terraform/terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}"

    - name: Fetch Terraform Outputs
      id: outputs
      run: |
        echo "API_URL=$(terraform output -raw api_url)" >> $GITHUB_ENV
        echo "USER_POOL_ID=$(terraform output -raw user-pool-id)" >> $GITHUB_ENV
        echo "USER_POOL_CLIENT_ID=$(terraform output -raw user-pool-client-id)" >> $GITHUB_ENV
        echo "CLOUDFRONT_ID=$(terraform output -raw cloudfront-distribution-id)" >> $GITHUB_ENV
        echo "STATIC_BUCKET=$(terraform output -raw static-bucket-id)" >> $GITHUB_ENV

    - name: Generate config.js
      run: |
        cat > js/config.js <<EOF
        window._config = {
            cognito: {
                userPoolId: '${{ env.USER_POOL_ID }}', // e.g. us-east-2_uXboG5pAb
                userPoolClientId: '${{ env.USER_POOL_CLIENT_ID }}', // e.g. 25ddkmj4v6hfsfvruhpfi7n4hv
                region: '${{ secrets.AWS_REGION }}' // e.g. us-east-2
            },
            api: {
                invokeUrl: '${{ env.API_URL }}' // e.g. https://rc7nyt4tql.execute-api.us-west-2.amazonaws.com/prod',
            }
        };
        EOF

    - name: Sync Static Files to S3
      run: |
        aws s3 sync . s3://${{ env.STATIC_BUCKET}} \
          --exclude ".git/*" \
          --exclude ".github/*" \
          --cache-control "max-age=300,public" \
          --delete

    - name: Invalidate CloudFront Cache
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${aws cloudfront list-distributions --query "DistributionList.Items[?Origins.Items[?Id=='s3-static-website']].Id" --output text} \
          --paths "/*"
